---
name: "Java Publish Template"

on:
  workflow_call:
    inputs:
      module-path:
        description: "Ruta del m贸dulo Java a compilar y desplegar"
        required: true
        type: string
      skip-tests:
        description: "Omitir tests"
        required: false
        type: boolean
        default: true
      release-version:
        description: 'Versi贸n de release (ej: 1.3.2)'
        required: true
        type: string
      development-version:
        # Default to the next minor version of the release version
        # This assumes the release version is in the format X.Y.Z or X.Y.Z-SNAPSHOT
        # If the release version is 1.3.2, the development version will be 1.4.0-SNAPSHOT
        description: 'Versi贸n de desarrollo tras release (ej: 1.4.0-SNAPSHOT)'
        required: true
        type: string

jobs:
  publish:
    name: Publish ${{ inputs.module-path }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Java & GPG
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          server-id: central
          server-username: ${{ secrets.OSSRH_USERNAME }}
          server-password: ${{ secrets.OSSRH_PASSWORD }}
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Deploy module
        working-directory: ${{ inputs.module-path }}
        # En realidad, esas llaves ({{ }} y {project.version}) no son sintaxis de shell, sino de GitHub Actions/YAML. Por eso:
        # Es un falso positivo de ShellCheck, porque su parser no entiende la sintaxis de GHA.
        # Para evitar ver ese warning, puedes deshabilitarlo en esa secci贸n con: shellcheck disable=SC1083
        run: |
          # shellcheck disable=SC1083
          mvn --batch-mode release:prepare \
            -DreleaseVersion=${{ inputs.release-version }} \
            -DdevelopmentVersion=${{ inputs.development-version }} \
            -DtagNameFormat=v@{project.version} \
            -DpushChanges=false
          mvn --batch-mode release:perform \
            -Dgoals="clean deploy" \
            -Darguments="-DskipTests=${{ inputs.skip-tests }} -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }}"
