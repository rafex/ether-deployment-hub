---
name: "Java Publish Template"

on:
  workflow_call:
    inputs:
      module-path:
        description: "Ruta del módulo Java a compilar y desplegar"
        required: true
        type: string
      skip-tests:
        description: "Omitir tests"
        required: false
        type: boolean
        default: true
      release-version:
        description: 'Versión de release (ej: 1.3.2)'
        required: true
        type: string
      development-version:
        # Default to the next minor version of the release version
        # This assumes the release version is in the format X.Y.Z or X.Y.Z-SNAPSHOT
        # If the release version is 1.3.2, the development version will be 1.4.0-SNAPSHOT
        description: 'Versión de desarrollo tras release (ej: 1.4.0-SNAPSHOT)'
        required: true
        type: string

jobs:
  publish:
    name: Publish ${{ inputs.module-path }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive


      - name: Generate .env for Makefile
        run: |
          echo "OSSRH_USERNAME=${{ secrets.OSSRH_USERNAME }}" | tee .env
          echo "OSSRH_PASSWORD=${{ secrets.OSSRH_PASSWORD }}" | tee -a .env
          echo "GPG_PASSPHRASE=${{ secrets.GPG_PASSPHRASE }}" | tee -a .env
          cat .env

      - name: Import GPG private key
        env:
          GPG_PRIVATE_KEY_B64: ${{ secrets.GPG_PRIVATE_KEY_B64 }}
        run: |
          echo "$GPG_PRIVATE_KEY_B64" | base64 --decode | gpg --batch --import
          gpg --list-secret-keys

      - name: Deploy via Makefile
        run: make deploy

      - name: Set project version from Git tag
        working-directory: ${{ inputs.module-path }}
        run: |
          mvn versions:set -DnewVersion=${{ github.ref_name }} -DgenerateBackupPoms=false

      - name: Deploy module
        working-directory: ${{ inputs.module-path }}
        run: |
          mvn --batch-mode clean deploy \
            -DskipTests=${{ inputs.skip-tests }} \
            -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }}
